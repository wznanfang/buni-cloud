spring:
  application:
    name: buni-gateway-service
  profiles:
    active: dev
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true

  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 360000

      routes:
        - id: buni-user
          uri: lb://buni-user
          predicates: Path=/user/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                keyResolver: '#{@ipAddressKeyResolver}'
        - id: buni-file
          uri: lb://buni-file
          predicates: Path=/file/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                keyResolver: '#{@ipAddressKeyResolver}'
        - id: buni-bus
          uri: lb://buni-bus
          predicates: Path=/bus/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                keyResolver: '#{@ipAddressKeyResolver}'
        - id: buni-ai
          uri: lb://buni-ai
          predicates: Path=/ai/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                keyResolver: '#{@ipAddressKeyResolver}'

# knife4j 网关接口文档配置
knife4j:
  gateway:
    # 是否开启
    enabled: true
    # 排序规则(tag/operation排序自4.2.0版本新增),取值：alpha-默认排序规则，官方swagger-ui默认实现,order-Knife4j提供的增强排序规则，开发者可扩展x-order，根据数值来自定义排序
    tags-sorter: order
    operations-sorter: order
    # 指定服务发现的模式聚合微服务文档，并且是默认`default`分组
    strategy: manual
    # 子服务存在其他分组情况，聚合其他分组，只能手动配置
    routes:
      - name: 用户管理
        # 子服务存在其他分组情况，聚合其他分组
        url: /user/v3/api-docs?group=用户管理
        # 服务名称
        service-name: buni-user
        # 路由前缀
        context-path: /user
        order: 1
      - name: 文件管理
        url: /file/v3/api-docs?group=文件管理
        service-name: buni-file
        context-path: /file
        order: 2
      - name: 消息管理
        url: /bus/v3/api-docs?group=消息管理
        service-name: buni-bus
        context-path: /bus
        order: 3
      - name: AI管理
        url: /ai/v3/api-docs?group=AI管理
        service-name: buni-ai
        context-path: /ai
        order: 4

# 开放接口，不需要鉴权
buni:
  public-url:
    - /v3/api-docs/GET
    - /v1/login/POST
    - /v1/loginOut/POST
    - /v1/getCode/GET
    - /v1/getQrCode/GET
    - /v1/spark/talk/GET
